name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up SSH Key for Frontend VM
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add Frontend VM to Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: Start Ngrok on Frontend VM
        run: |
          # Inicia o Ngrok na VM do frontend para expor a aplicação
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            # Instala Ngrok se necessário
            if ! command -v ngrok &> /dev/null; then
              # Comando para instalar o Ngrok (ajuste conforme necessário)
              sudo apt-get update
              sudo apt-get install -y ngrok-client
            fi

            # Inicia o Ngrok em segundo plano na porta padrão do Vite (5173)
            nohup ngrok http 5173 > ngrok.log &  # Ajuste a porta conforme necessário
          EOF

      - name: Wait for Ngrok to be Ready
        run: sleep 10  # Dê um tempo para o Ngrok iniciar e o URL ser gerado

      - name: Get Ngrok URL
        id: ngrok
        run: |
          # Obtém o URL público do Ngrok
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'

      - name: Deploy Frontend
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: 22
          source: "./frontend/*"  # Ajuste para o caminho correto dos arquivos do frontend
          target: "/home/john/frontend"  # Caminho na VM onde os arquivos do frontend serão hospedados

      - name: Deploy Frontend and Trigger Backend Deploy
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            # Subir o frontend
            cd /home/john/frontend  # Caminho corrigido
            docker-compose down || true
            docker-compose up -d --build

            # Conectar na VM do backend e fazer o deploy
            ssh -o StrictHostKeyChecking=no ${{ secrets.BACKEND_VM_USER }}@${{ secrets.BACKEND_VM_IP }} << 'EOF'
              # Copiar arquivos do frontend para o backend
              scp -o StrictHostKeyChecking=no -r ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/home/john/frontend/* /home/john/backend/  # Ajuste o caminho conforme necessário

              cd /home/john/backend  # Caminho corrigido
              docker-compose down || true
              docker-compose up -d --build
            EOF

      - name: Notify Deployment
        run: |
          echo "Frontend is live at: ${{ steps.ngrok.outputs.result }}"
